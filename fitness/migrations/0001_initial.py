# Generated by Django 5.2.7 on 2025-10-10 16:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.CharField(blank=True, max_length=100)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('equipment_text', models.TextField(blank=True, help_text='List your available equipment (e.g., dumbbells 5 -12kg, resistance bands medium, exercise bike, etc.)', null=True)),
                ('weight_kg', models.FloatField(blank=True, help_text='kg(private)', null=True)),
                ('height_cm', models.FloatField(blank=True, help_text='cm(private)', null=True)),
                ('age', models.PositiveIntegerField(blank=True, help_text='years(private)', null=True)),
                ('fitness_level', models.CharField(blank=True, choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], help_text='(private)', max_length=20)),
                ('long_term_injuries', models.TextField(blank=True, help_text='Please describe any long-term limitations (describe functional limitations).', null=True)),
                ('injury_limitations', models.TextField(blank=True, help_text='Describe specific movement limitations / accessibility needs.', null=True)),
                ('minor_injuries', models.TextField(blank=True, help_text="Minor injuries in last 2 weeks (e.g., 'tight hamstring').", null=True)),
                ('exercise_days_per_week', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(7)])),
                ('exercise_duration', models.CharField(choices=[('0-30', '0-30 minutes'), ('31-60', '31-60 minutes'), ('61-90', '61-90 minutes'), ('91+', '91+ minutes')], default='30-60', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to='fitness.userprofile')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_json', models.JSONField()),
                ('plan_summary', models.CharField(blank=True, max_length=400)),
                ('goal_type', models.CharField(choices=[('strength', 'Strength'), ('cardio', 'Cardio'), ('combined', 'Combined')], default='combined', max_length=20)),
                ('target_event', models.CharField(blank=True, help_text="E.g., '5K run', '10K cycle', 'Half marathon', 'Marathon', 'General fitness'", max_length=100)),
                ('target_date', models.DateField(blank=True, null=True)),
                ('start_date', models.DateField(auto_now_add=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('progress_comment', models.TextField(blank=True, null=True)),
                ('minor_injuries', models.TextField(blank=True, null=True)),
                ('previous_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='fitness.trainingplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='fitness.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='fitness.trainingplan')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_made', to='fitness.userprofile')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments_received', to='fitness.userprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
